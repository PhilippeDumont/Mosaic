// Generated by CoffeeScript 1.9.3
(function() {
  var Library, fs, sizeOfImage;

  fs = require('fs');

  sizeOfImage = require('image-size');

  Library = (function() {
    function Library(imageDirectory, movieDirectory) {
      this.imageDirectory = imageDirectory;
      this.movieDirectory = movieDirectory;
      this.images1 = [];
      this.images2V = [];
      this.images2H = [];
      this.images3V = [];
      this.images3H = [];
      this.images4 = [];
      this.movies = [];
      this.bigImages = [];
      this.listElements();
    }

    Library.prototype.listElements = function() {
      var imageFiles;
      this._reset();
      imageFiles = fs.readdirSync(this.imageDirectory);
      return this._sortImage(imageFiles);
    };

    Library.prototype._reset = function() {
      this.images1 = [];
      this.images2V = [];
      this.images2H = [];
      this.images3V = [];
      this.images3H = [];
      this.images4 = [];
      return this.images9 = [];
    };

    Library.prototype._sortImage = function(images) {
      var file, i, image, imageDimension, len, link, results;
      results = [];
      for (i = 0, len = images.length; i < len; i++) {
        file = images[i];
        link = 'images/' + file;
        imageDimension = sizeOfImage(link);
        if (imageDimension.height === 1080 && imageDimension.width === 1920) {
          image = new Element('image', '../' + file, imageDimension.width, imageDimension.height);
          this.images1.push(image);
        }
        if (imageDimension.height === 1080 * 2 && imageDimension.width === 1920) {
          image = new Element('image', '../' + file, imageDimension.width, imageDimension.height);
          this.images2V.push(image);
        }
        if (imageDimension.height === 1080 && imageDimension.width === 1920 * 2) {
          image = new Element('image', '../' + file, imageDimension.width, imageDimension.height);
          this.images2H.push(image);
        }
        if (imageDimension.height === 1080 * 3 && imageDimension.width === 1920) {
          image = new Element('image', '../' + file, imageDimension.width, imageDimension.height);
          this.images3V.push(image);
        }
        if (imageDimension.height === 1080 && imageDimension.width === 1920 * 3) {
          image = new Element('image', '../' + file, imageDimension.width, imageDimension.height);
          this.images3H.push(image);
        }
        if (imageDimension.height === 1080 * 2 && imageDimension.width === 1920 * 2) {
          image = new Element('image', '../' + file, imageDimension.width, imageDimension.height);
          this.images4.push(image);
        }
        if (imageDimension.height === 1080 * 3 && imageDimension.width === 1920 * 3) {
          image = new Element('image', '../' + file, imageDimension.width, imageDimension.height);
          results.push(this.images9.push(image));
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    Library.prototype._sortVideo = function() {
      var file, i, len, link, movie, movieFiles, results;
      this.movies = [];
      movieFiles = fs.readdirSync(this.movieDirectory);
      results = [];
      for (i = 0, len = movieFiles.length; i < len; i++) {
        file = movieFiles[i];
        link = './video/' + file;
        movie = new Element('video', link, 0, 0);
        results.push(this.movies.push(movie));
      }
      return results;
    };

    return Library;

  })();

  window.Library = Library;

}).call(this);
